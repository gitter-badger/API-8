<?php
/**
 * ImportationCatalogInfoApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Catalogs
 *
 * This API allows you to manage your catalogs
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ImportationCatalogInfoApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ImportationCatalogInfoApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for importationConfigureCatalogColumn
     *
     * Configure catalog column.
     *
     */
    public function testImportationConfigureCatalogColumn()
    {

    }

    /**
     * Test case for importationDeleteCustomColumn
     *
     * Delete Custom Column.
     *
     */
    public function testImportationDeleteCustomColumn()
    {

    }

    /**
     * Test case for importationGetCustomColumnExpression
     *
     * Get the encrypted custom column expression in this importation.
     *
     */
    public function testImportationGetCustomColumnExpression()
    {

    }

    /**
     * Test case for importationGetCustomColumns
     *
     * Get custom columns currently place in this importation.
     *
     */
    public function testImportationGetCustomColumns()
    {

    }

    /**
     * Test case for importationGetDetectedCatalogColumns
     *
     * Get detected catalog columns during this importation..
     *
     */
    public function testImportationGetDetectedCatalogColumns()
    {

    }

    /**
     * Test case for importationGetProductSample
     *
     * Get the product sample related to this importation with all columns (catalog and custom).
     *
     */
    public function testImportationGetProductSample()
    {

    }

    /**
     * Test case for importationGetProductSampleCustomColumnValue
     *
     * Get product sample custom column value related to this importation..
     *
     */
    public function testImportationGetProductSampleCustomColumnValue()
    {

    }

    /**
     * Test case for importationIgnoreColumn
     *
     * Ignore Column.
     *
     */
    public function testImportationIgnoreColumn()
    {

    }

    /**
     * Test case for importationMapCatalogColumn
     *
     * Map catalog column to a BeezUP column.
     *
     */
    public function testImportationMapCatalogColumn()
    {

    }

    /**
     * Test case for importationMapCustomColumn
     *
     * Map custom column to a BeezUP column.
     *
     */
    public function testImportationMapCustomColumn()
    {

    }

    /**
     * Test case for importationReattendColumn
     *
     * Reattend Column.
     *
     */
    public function testImportationReattendColumn()
    {

    }

    /**
     * Test case for importationSaveCustomColumn
     *
     * Create or replace a custom column.
     *
     */
    public function testImportationSaveCustomColumn()
    {

    }

    /**
     * Test case for importationUnmapCatalogColumn
     *
     * Unmap catalog column.
     *
     */
    public function testImportationUnmapCatalogColumn()
    {

    }

    /**
     * Test case for importationUnmapCustomColumn
     *
     * Unmap custom column.
     *
     */
    public function testImportationUnmapCustomColumn()
    {

    }

}
